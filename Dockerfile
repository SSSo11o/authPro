# Используем официальный образ Golang версии 1.23.1 и называем этот этап "builder"
# Этот этап нужен для компиляции приложения
FROM golang:1.23.1 AS builder

# Устанавливаем рабочую директорию внутри контейнера
WORKDIR /app

# Копируем файлы управления зависимостями (go.mod и go.sum)
# Это делается отдельно, чтобы использовать кеш при повторных сборках
COPY go.mod go.sum ./

# Загружаем зависимости без копирования исходного кода
RUN go mod download

# Копируем исходный код в контейнер
COPY . .

# Отключаем CGO и задаём GOOS=linux для корректной сборки в контейнере
ENV CGO_ENABLED=0 GOOS=linux

# Компилируем бинарный файл auth
RUN go build -o auth main.go

# Используем минималистичный образ Alpine для финального контейнера
FROM alpine:latest

# Устанавливаем рабочую директорию внутри финального контейнера
WORKDIR /root/

# Копируем скомпилированный бинарный файл из builder-контейнера
COPY --from=builder /app/auth .

# Открываем порт 8080 (документируем, что приложение слушает этот порт)
EXPOSE 8080

# Указываем команду для запуска контейнера (запуск бинарного файла auth)
CMD ["./auth"]
